version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to AWS ECR
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 471112518313.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=471112518313.dkr.ecr.us-east-1.amazonaws.com/vw-ecr 
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -f":" '{print $2}')
  install:
    runtime-versions:
      nodejs: 16
   
    commands:
        # install npm
        - npm install
       
  build:
    commands:
        - echo Build Statred on 'date'
        # run build script
        - npm run-script build
        - echo Building Docker image
        - docker build -t $RREPOSITORY_URI:latest
        - docker tag $RREPOSITORY_URI:latest $RREPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
        - echo build compleded on 'date'
        - echo pushing into repository
        - docker push $RREPOSITORY_URI:latest
        - docker push $RREPOSITORY_URI:$IMAGE_TAG
        - echo writing image defination files
        - DOCKER_CONTAINER_NAME = ec2-project-container
        - printf '[{"name": "%s","imageurl":"%s"}]' $DOCKER_CONTAINER_NAME  $RREPOSITORY_URI:$IMAGE_TAG > imagedefinations.json
        - echo printing imagedefinations.json
        - cat imagedefinations.json
  
     
artifacts:
  # include all files required to run application
  # notably excluded is node_modules, as this will cause overwrite error on deploy
  files:
    - models/*
    - package.json
    - index.js
    
